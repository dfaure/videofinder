global FluentPalette {
    out property <brush> control-secondary: #F9F9F980;
    out property <brush> control-tertiary: #F9F9F94D;
    out property <brush> control-disabled: #F9F9F94D;
    out property <brush> border: #00000073;
    out property <brush> control-background: #FFFFFFB3;
    out property <brush> control-border: @linear-gradient(180deg, #0000000F 90.58%, #00000029 100%);
}

export component LargeIconButton {
    in property <image> icon;
    in property <bool> enabled <=> i-touch-area.enabled;
    //in property <bool> colorize-icon;
    out property <bool> pressed: self.enabled && i-touch-area.pressed;

    callback clicked;

    min-width: max(32px, i-layout.min-width);
    min-height: max(32px, i-layout.min-height);
    horizontal-stretch: 0;
    vertical-stretch: 0;

    states [
        disabled when !root.enabled : {
            i-background.background: FluentPalette.control-disabled;
            i-border.border-color: FluentPalette.border;
        }
        pressed when root.pressed : {
            i-background.background: FluentPalette.control-tertiary;
            i-border.border-color: FluentPalette.border;
        }
    ]

    i-background := Rectangle {
        border-radius: 4px;
        background: FluentPalette.control-background;

        animate background, border-color { duration: 150ms; }

        i-border := Rectangle {
            border-radius: parent.border-radius;
            border-width: 1px;
            border-color: FluentPalette.control-border;
        }

        i-layout := HorizontalLayout {
            padding-left: 12px;
            padding-right: 12px;
            padding-top: 5px;
            padding-bottom: 5px;
            spacing: 4px;
            alignment: center;

            if (root.icon.width > 0 && root.icon.height > 0) : Image {
                y: (parent.height - self.height) / 2;
                source <=> root.icon;
                width: 40px;
                //colorize: root.colorize-icon ? root.text-color : transparent;
            }
        }
    }

    i-touch-area := TouchArea {
        clicked => {
            root.clicked();
        }
    }
}
