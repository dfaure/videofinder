import { Palette, VerticalBox } from "std-widgets.slint";
import { RecordWrapper } from "record-wrapper.slint";

component ActorLabel inherits Rectangle {
    in property <string> text;
    callback clicked(string);

    width: text_el.preferred-width + 8px;
    height: text_el.preferred-height + 4px;

    TouchArea {
        clicked => { root.clicked(root.text); }
    }

    text_el := Text {
        text: root.text;
        color: blue;
        // TODO no font-underline property yet?
    }
}

export component DetailsWindow inherits PopupWindow {

    in property<string> film-name;
    in property<RecordWrapper> record;
    in property<image> image;
    in property<string> error;
    callback actorClicked(string);
    callback notifyClosed();

    // not supported; asked on the tchat - default-font-size: 20px;

    // PopupWindow is transparent by default!
    contents := Rectangle {
        x: 5px;
        y: 5px;
        height: root.height - 10px;
        width: root.width - 10px;
        background: white; // Palette.background;
        border-width: 1px;
        border-color: black;

        // Top-right close button
        Image {
            source: @image-url("icons/dismiss.svg");
            colorize: Palette.foreground;
            TouchArea {
                clicked => {
                    root.notifyClosed();
                    root.close();
                }
            }
            x: contents.width - self.width - 5px;
            y: 5px;
        }

        VerticalBox {
            alignment: start;

            Text {
                text: root.film-name;
                wrap: word-wrap;
                font-weight: 800; // bold
            }
            Text {
                visible: !root.record.location.is-empty;
                text: @tr("Location: {}", root.record.location);
                wrap: word-wrap;
            }
            // visible: !root.record.path.is-empty;
            // still takes space in the layout, unlike the if construct!
            if !root.record.path.is-empty: Text {
                text: @tr("Path: {}", root.record.path);
                wrap: word-wrap;
            }
            Text {
                visible: !root.record.isComputerFile;
                text: @tr("Shelf: {}", root.record.shelf);
            }
            Text {
                visible: !root.record.isComputerFile;
                text: @tr("Row: {}", root.record.row);
            }
            Text {
                visible: !root.record.isComputerFile;
                text: @tr("Position: {}", root.record.position);
            }
            Text {
                visible: root.record.film_code != 0;
                text: @tr("Year: {}", (root.record.year > 0 ? root.record.year : "-"));
            }
            Text {
                visible: root.record.film_code != 0;
                text: @tr("Duration: {}", (root.record.duration > 0 ? root.record.duration + " min" : "-"));
            }


            for actor in root.record.actors: ActorLabel {
                text: actor;
                clicked(s) => {
                    root.actorClicked(s);
                    root.notifyClosed();
                    root.close();
                }
            }

            if root.image.width > 0: Image {
                source: root.image;
            }

            if !root.error.is-empty: Text {
                text: root.error;
            }
        }
    }
}
