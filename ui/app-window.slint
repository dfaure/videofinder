import { Button, HorizontalBox, LineEdit, ListView, StandardListView, VerticalBox } from "std-widgets.slint";

struct ResultItemData {
    film_name: string,
    support_type: int,
    // etc.
}

component ResultItemDisplay {
    in property <string> film_name;
    in property <int> support_type;

    HorizontalBox {
        spacing: 5px; // Space between icon and text
        // Image TODO
        Text {
            text: film_name;
            wrap: word-wrap;
            vertical-alignment: center;
        }
    }
}

export component AppWindow inherits Window {

    default-font-size: 20px;

    in property <string> status; // last DB update etc.
    in property <string> search_error;
    in property <[ResultItemData]> result_items: [];

    callback request-increase-value();
    callback download-db();
    callback search(string);

    VerticalBox {
        HorizontalBox {
            searchLineEdit := LineEdit {
                placeholder-text: "Enter search string";
                accepted(text) => {
                    root.search(text);
                }
            }
            Button {
                icon: @image-url("icons/search.svg");
                colorize-icon: true;
                clicked => {
                    root.search(searchLineEdit.text);
                }
            }
        }
        if searchLineEdit.text.is-empty : HorizontalBox {
            HorizontalBox {
                alignment: start;
                Text {
                    text: "\{root.status}";
                    vertical-alignment: center;
                }

                Button {
                    icon: @image-url("icons/reload.png");
                    clicked => {
                        root.download-db();
                    }
                    min-height: searchLineEdit.min-height;
                }
            }
        }
        if !search_error.is-empty : Text {
            text: search_error;
        }
        if search_error.is-empty : resultListView := ListView {
            for data in result_items : ResultItemDisplay {
                film_name: data.film_name;
                support_type: data.support_type;
                width: resultListView.viewport-width;
            }
            horizontal-scrollbar-policy: always-off;
            vertical-stretch: 1;
            mouse-drag-pan-enabled: true;
        }
    }
}
